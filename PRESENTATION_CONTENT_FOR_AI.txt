# Flight Delay Prediction MLOps System - Presentation Slides

## Slide 1: Title
Title: Flight Delay Prediction - Production MLOps System
Subtitle: Team FlightGuard AI (Group #5)
Content: Rishabh Malik & Aleena Varghese | AAI-540 Machine Learning Operations | October 2025

## Slide 2: Business Problem
Title: Why Flight Delay Prediction?
Content:
- Flight delays cost airlines $8+ billion annually
- Frustrates millions of passengers with cascading effects
- Our Solution: Predict delays BEFORE departure (≥15 minutes)
- Enable proactive adjustments: crew, gates, maintenance
- Improve passenger communication and satisfaction
Image: Icon of airplane with clock

## Slide 3: System Architecture
Title: Complete MLOps Pipeline
Content: Flowchart showing:
Real Data (5.5M records) → Feature Store → Model Training → Model Registry → Quality Gate → Deployment → Monitoring → Batch Inference
Key Components:
- AWS SageMaker Feature Store
- Real-time endpoint (ml.m5.large)
- CloudWatch monitoring with alarms
- SageMaker Pipelines CI/CD

## Slide 4: Real Dataset
Title: Mendeley Dataset (NOT Synthetic!)
Content:
- Source: "Dataset for Airline Departure Delay Prediction"
- Volume: 5.5 million flight records from 2023
- Sample: 50,000 records for training
- Delay Rate: 22.48% (realistic)
- 12 Features: airline, origin, destination, distance, day_of_week, month, hour, temperature, wind_speed, precipitation, visibility, snow
- Real airline/airport distributions
- Actual weather correlations

## Slide 5: Feature Store
Title: AWS SageMaker Feature Store Demo
Content:
- Feature Group: flight-delay-features-2025-10-21-03-41-14
- Unified design: Single feature group (flight + weather)
- 50,000 records ingested
- Online Store: Low-latency retrieval (<10ms)
- Offline Store: Historical data (S3 Parquet)
- 12 features + metadata
Screenshot placeholder: Feature Store console

## Slide 6: Model Training
Title: 3 Models Evaluated - XGBoost Wins
Content: Table showing:
| Model | F1-Score | Accuracy | ROC-AUC | Status |
| Logistic Regression | 0.21 | 55.2% | 0.58 | Baseline |
| Random Forest | 0.33 | 63.4% | 0.64 | Good |
| XGBoost | 0.358 | 66.6% | 0.663 | SELECTED ✓ |

Conservative Approach:
- Predicts 34.7% delays vs actual 17.3%
- Better to warn than miss delays

## Slide 7: Model Registry
Title: SageMaker Model Registry Demo
Content:
- Model Package Group: FlightDelayPredictionPackageGroup
- XGBoost 1.7 with JSON booster format
- Preprocessing artifacts included
- Automatic versioning on each pipeline run
- Approval workflow: PendingManualApproval → Approved
- Model lineage tracking
Screenshot placeholder: Model Registry console

## Slide 8: Real-Time Endpoint
Title: Deployed Endpoint Demo
Content:
- Name: flight-delay-predictor-2025-10-21-06-04-56
- Instance: ml.m5.large
- Status: InService ✓
- Data Capture: 100% enabled

Example Prediction:
Input: Alaska Airlines, JFK→SEA, distance 2422, temp 45°F
Output: On-time (78% probability)
Screenshot placeholder: Endpoint console

## Slide 9: CloudWatch Monitoring
Title: Real-Time Monitoring & Alarms
Content:
Dashboard: FlightDelayPrediction-ModelMonitoring
Key Metrics:
- Invocations (requests/min)
- Model Latency (<100ms)
- Error Rates (4xx/5xx)

Alarms:
1. High Error Rate: >10 errors/10min
2. High Latency: >1000ms

Monitoring Schedule: Hourly baseline comparison
Screenshot placeholder: CloudWatch dashboard

## Slide 10: Monitoring Report
Title: Data Quality Monitoring Results
Content:
- Baseline: 5,000 validation records
- Hourly comparison against baseline
- Checks: Feature drift, data quality, missing values, distribution shift
- Status: All checks passing ✓
- Minor distribution shift detected (within tolerance)
Image: Monitoring report graph showing metrics over time

## Slide 11: CI/CD Pipeline
Title: SageMaker Pipeline with Quality Gates
Content:
Pipeline: FlightDelayPredictionPipeline
6 Steps:
1. Preprocessing → Feature engineering
2. Training → XGBoost training
3. Evaluation → Calculate metrics
4. Condition → Quality gate (F1≥0.35, Acc≥0.65)
5. Register Model → Add to registry if pass
6. Fail Step → Alert if fail

States Demonstrated:
✓ Success: Model met thresholds → Deployed
✗ Failure: Degraded model → Stopped at gate
Screenshot placeholder: Pipeline DAG

## Slide 12: Batch Inference
Title: Large-Scale Predictions for Business
Content:
- Dataset: 5,000 flights
- Processing Time: 42 seconds
- Accuracy: 72.16%
- F1-Score: 46.50%
- ROC-AUC: 78.13%

Business Insights:
- 251 high-risk flights (>70% delay probability)
- Conservative: 34.7% predicted vs 17.3% actual
- Airline accuracy: 68-76%

Use Cases: Daily planning, proactive notifications, route analysis

## Slide 13: Visualization
Title: Batch Inference Results Dashboard
Content: 4-panel visualization
1. Confusion Matrix: 3003 true on-time, 605 true delays, 260 missed, 1132 false alarms
2. Probability Distribution: Bimodal showing model confidence
3. Accuracy by Airline: 68-76% across carriers
4. Overall: 72.2% correct predictions
Image: batch_inference_results.png

## Slide 14: Future Improvements
Title: What's Next & Challenges
Content:
Future Enhancements:
- Real-time weather APIs
- Auto-scaling for production
- A/B testing for model updates
- Feature expansion (congestion, aircraft age)
- International routes

Challenges Solved:
✓ Container mismatch (SKLearn→XGBoost)
✓ Version compatibility (JSON booster)
✓ Batch processing speed (real-time approach)
✓ Feature Store design (simplified to 1 group)

Risks: Data drift, scalability, bias, cost ($100/month)

## Slide 15: Key Achievements
Title: What We Delivered
Content:
Complete MLOps System:
✓ Real data (5.5M records, not synthetic)
✓ Feature Store with 50K records
✓ XGBoost model (F1=0.358, ROC-AUC=0.663)
✓ Real-time endpoint with data capture
✓ Hourly monitoring with alarms
✓ CI/CD pipeline with quality gates
✓ Batch inference with insights

Production-Ready:
✓ No PII/PHI data
✓ Automated monitoring
✓ Quality gates prevent bad models
✓ 72% prediction accuracy
✓ Business value: 251 high-risk flights identified

GitHub: https://github.com/RishabhDE/flight_delay_prediction

## Slide 16: Thank You
Title: Thank You!
Content:
Team FlightGuard AI
Rishabh Malik & Aleena Varghese

Project Resources:
- GitHub: github.com/RishabhDE/flight_delay_prediction
- Data: Mendeley Dataset (5.5M flights)
- Tech: AWS SageMaker, CloudWatch, XGBoost

Key Metrics:
- Model: F1=0.358, ROC-AUC=0.663
- Batch: 72.16% accuracy
- Speed: 5,000 predictions in 42 seconds
- Monitoring: Hourly checks

Questions?
